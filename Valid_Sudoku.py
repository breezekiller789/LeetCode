#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# https://leetcode.com/problems/valid-sudoku/
# board = [
#     ["5", "3", ".", ".", "7", ".", ".", ".", "."],
#     ["6", ".", ".", "1", "9", "5", ".", ".", "."],
#     [".", "9", "8", ".", ".", ".", ".", "6", "."],
#     ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
#     ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
#     ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
#     [".", "6", ".", ".", ".", ".", "2", "8", "."],
#     [".", ".", ".", "4", "1", "9", ".", ".", "5"],
#     [".", ".", ".", ".", "8", ".", ".", "7", "9"]
# ]
# board = [
#     ["8", "3", ".", ".", "7", ".", ".", ".", "."],
#     ["6", ".", ".", "1", "9", "5", ".", ".", "."],
#     [".", "9", "8", ".", ".", ".", ".", "6", "."],
#     ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
#     ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
#     ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
#     [".", "6", ".", ".", ".", ".", "2", "8", "."],
#     [".", ".", ".", "4", "1", "9", ".", ".", "5"],
#     [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
board = [
    [".", ".", ".", ".", "5", ".", ".", "1", "."],
    [".", "4", ".", "3", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", "3", ".", ".", "1"],
    ["8", ".", ".", ".", ".", ".", ".", "2", "."],
    [".", ".", "2", ".", "7", ".", ".", ".", "."],
    [".", "1", "5", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", "2", ".", ".", "."],
    [".", "2", ".", "9", ".", ".", ".", ".", "."],
    [".", ".", "4", ".", ".", ".", ".", ".", "."]]
# 用來檢查數字有無出現過
Flags = [False for x in range(10)]

# 先檢查每一列有沒有重複的數字。
for row, rows in enumerate(board):
    for col, cols in enumerate(rows, start=1):
        # 空格不用看，直接跳下一個
        if cols == ".":
            continue
        # 如果該數字已經出現過，代表invalid
        if Flags[int(cols)]:
            print "Row Error"
            print row, col, "False"
            exit()
        # 走到這一步代表該數字沒出現過，flag改成true
        Flags[int(cols)] = True

    Flags = [False for x in range(10)]

# 檢查每一行，原理都和上面一樣
for col in range(9):
    for row in range(9):
        # 空格不用看，直接跳下一個
        if board[row][col] == ".":
            continue
        # 如果該數字已經出現過，代表invalid
        if Flags[int(board[row][col])]:
            print "Column Error"
            print row, col, "False"
            exit()
        # 走到這一步代表該數字沒出現過，flag改成true
        Flags[int(board[row][col])] = True
    Flags = [False for x in range(10)]

# 檢查每一個方格子內有沒有重複數字
# 最外兩層for我是在抓每一個九宮格的中心點的位置，最裡面兩層是在該格九宮格裡面走
# 動用的，原理都一樣，有重複的數字直接跳error
for x in range(1, 9, 3):
    for y in range(1, 9, 3):
        for row in range(-1, 2):
            for col in range(-1, 2):
                # 空格不用看，直接跳下一個
                if board[x+row][y+col] == ".":
                    continue
                # 如果該數字已經出現過，代表invalid
                if Flags[int(board[x+row][y+col])]:
                    print "Inside Grid"
                    print x+row, y+col, "False"
                    exit()
                # 走到這一步代表該數字沒出現過，flag改成true
                Flags[int(board[x+row][y+col])] = True
        Flags = [False for m in range(10)]

print "True"
